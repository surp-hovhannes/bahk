# Generated by Django 4.2.11 on 2025-08-05 00:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text="Unique identifier for the event type (e.g., 'user_joined_fast')", max_length=100, unique=True)),
                ('name', models.CharField(help_text='Human-readable name for the event type', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description of what this event represents')),
                ('category', models.CharField(choices=[('user_action', 'User Action'), ('system_event', 'System Event'), ('milestone', 'Milestone'), ('notification', 'Notification'), ('analytics', 'Analytics')], default='user_action', help_text='Category for grouping similar event types', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this event type is currently active')),
                ('track_in_analytics', models.BooleanField(default=True, help_text='Whether to include this event type in analytics dashboards')),
                ('requires_target', models.BooleanField(default=False, help_text='Whether this event type requires a target object')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event Type',
                'verbose_name_plural': 'Event Types',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, help_text='ID of the target object', null=True)),
                ('title', models.CharField(help_text='Brief title describing the event', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the event')),
                ('data', models.JSONField(blank=True, default=dict, help_text='Additional data related to the event (JSON format)')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='When the event occurred')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address from which the event originated', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string from the request')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, help_text='Content type of the target object', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('event_type', models.ForeignKey(help_text='The type of event that occurred', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.eventtype')),
                ('user', models.ForeignKey(blank=True, help_text='User who triggered this event (null for system events)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='events_even_user_id_e79b1f_idx'), models.Index(fields=['event_type', '-timestamp'], name='events_even_event_t_acfedd_idx'), models.Index(fields=['content_type', 'object_id', '-timestamp'], name='events_even_content_229e66_idx'), models.Index(fields=['-timestamp'], name='events_even_timesta_5c8baa_idx')],
            },
        ),
    ]
