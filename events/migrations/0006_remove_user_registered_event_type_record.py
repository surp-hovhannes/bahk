# Generated by Django 4.2.11 on 2025-08-10 19:59

from django.db import migrations


def remove_user_registered_event_type(apps, schema_editor):
    """Remove USER_REGISTERED EventType and related data."""
    EventType = apps.get_model('events', 'EventType')
    Event = apps.get_model('events', 'Event')
    UserActivityFeed = apps.get_model('events', 'UserActivityFeed')
    
    # Remove UserActivityFeed items with user_registered activity type
    deleted_feed_items = UserActivityFeed.objects.filter(activity_type='user_registered').count()
    UserActivityFeed.objects.filter(activity_type='user_registered').delete()
    print(f"Removed {deleted_feed_items} user_registered activity feed items")
    
    # Remove Events with USER_REGISTERED event type
    user_registered_event_type = EventType.objects.filter(code='user_registered').first()
    if user_registered_event_type:
        deleted_events = Event.objects.filter(event_type=user_registered_event_type).count()
        Event.objects.filter(event_type=user_registered_event_type).delete()
        print(f"Removed {deleted_events} user_registered events")
        
        # Remove the EventType itself
        user_registered_event_type.delete()
        print("Removed USER_REGISTERED EventType record")
    else:
        print("USER_REGISTERED EventType not found")


def reverse_remove_user_registered_event_type(apps, schema_editor):
    """Recreate USER_REGISTERED EventType (reverse operation)."""
    EventType = apps.get_model('events', 'EventType')
    
    # Recreate the EventType
    user_registered_type, created = EventType.objects.get_or_create(
        code='user_registered',
        defaults={
            'name': 'User Registered',
            'description': 'A new user account has been registered',
            'category': 'user_action',
            'is_active': True,
            'requires_target': True,
        }
    )
    if created:
        print(f"Recreated EventType: {user_registered_type.name}")


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0005_remove_user_registered_event_type'),
    ]

    operations = [
        migrations.RunPython(
            remove_user_registered_event_type,
            reverse_remove_user_registered_event_type
        ),
    ]
