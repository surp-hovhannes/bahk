"""
Management command to clear analytics test data.
"""

from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.db import transaction

from events.models import Event
from hub.models import Profile, Church

User = get_user_model()


class Command(BaseCommand):
    help = 'Clear analytics test data generated by generate_analytics_data command'
    
    def add_arguments(self, parser):
        parser.add_argument(
            '--confirm',
            action='store_true',
            help='Confirm deletion of test data'
        )
        parser.add_argument(
            '--keep-users',
            action='store_true',
            help='Keep test users, only delete events'
        )
    
    def handle(self, *args, **options):
        confirm = options['confirm']
        keep_users = options['keep_users']
        
        if not confirm:
            self.stdout.write(
                self.style.WARNING(
                    'This will delete test analytics data. Use --confirm to proceed.'
                )
            )
            return
        
        # Clear analytics events
        analytics_events = Event.objects.filter(event_type__category='analytics')
        event_count = analytics_events.count()
        analytics_events.delete()
        self.stdout.write(f'Deleted {event_count:,} analytics events')
        
        if not keep_users:
            # Clear test users and related data
            test_users = User.objects.filter(username__startswith='analytics_user_')
            user_count = test_users.count()
            
            with transaction.atomic():
                # Delete profiles first
                Profile.objects.filter(user__username__startswith='analytics_user_').delete()
                
                # Delete users
                test_users.delete()
            
            self.stdout.write(f'Deleted {user_count} test users and their profiles')
            
            # Clean up test church if it has no other users
            try:
                test_church = Church.objects.get(name='Analytics Test Church')
                if test_church.profiles.count() == 0:
                    test_church.delete()
                    self.stdout.write('Deleted empty test church')
            except Church.DoesNotExist:
                pass
        
        self.stdout.write(
            self.style.SUCCESS('âœ… Analytics test data cleared successfully')
        )

